---
import Navbar from "@/components/Navbar/Navbar";
import Footer from "@/components/Footer/Footer.astro";
import { SEO } from "astro-seo";

import { METADATA } from "@/common/constant/metadata";
const ogImageURL = new URL(METADATA.openGraph.img, Astro.site).href;

interface Props {
  title?: string;
  description?: string;
  ogImage?: {
    src: string;
    alt: string;
  };
  publishedDate?: Date;
}

const {
  title = (METADATA.authors.name + METADATA.exTitle),
  description = METADATA.description,
  ogImage = ogImageURL,
  publishedDate,
} = Astro.props;
---

<html lang="en">
  <head>
    <SEO
      title={title}
      description={METADATA.description}
      openGraph={{
        basic: {
          title: METADATA.creator,
          type: "website",
          image: METADATA.openGraph.img,
          url: METADATA.openGraph.url,
        },
        optional: {
          description: METADATA.description,
          locale: METADATA.openGraph.locale,
          siteName: METADATA.openGraph.siteName,
        },
      }}
      extend={{
        link: [{ rel: "icon", href: ogImageURL }],
        meta: [
          {
            name: "twitter:image",
            content: METADATA.openGraph.img
          },
          {
            name: "twitter:title",
            content: METADATA.creator,
          },
          {
            name: "twitter:description",
            content:
              METADATA.description,
          },
          {
            name: "twitter:url",
            content: METADATA.openGraph.url
          },
          {
            name: "twitter:card",
            content: "summary_large_image"
          },
          {
            name: "twitter:site",
            content: METADATA.openGraph.siteName
          }
        ],
      }}
    />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content={METADATA.authors.name} />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="follow, index" />
    <meta title={title} />
    {
      publishedDate && (
        <meta
          property="article:published_time"
          content={publishedDate.toISOString()}
        />
      )
    }
    <link rel="icon" type="image/x-icon" href={METADATA.profile.icon} />
  </head>
  <body class="dark:bg-zinc-900 bg-zinc-100 antialiased selection:bg-blue-300 selection:text-zinc-900 dark:selection:bg-blue-500 dark:selection:text-white pt-10 pb-0 2xl:text-lg font-inter">
    <Navbar client:load active={new URL(Astro.request.url).pathname.split('/')[1]}/>
    <main class="flex justify-center">
      <section class="w-full min-h-screen md:max-w-3xl">
        <slot />
        <Footer />
      </section>
    </main>
  </body>
</html>
<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
</script>